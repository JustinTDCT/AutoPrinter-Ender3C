[include fluidd.cfg]

[include timelapse.cfg]

[include klackender.cfg]

[virtual_sdcard]
path: /home/jdube/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

#[printer]
#kinematics: none
#max_velocity: 1000
#max_accel: 1000
# This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
# pre-klackender position_max: 245
homing_speed: 50
position_max: 250 #Your printhead have to move all the way to the right to pickup the probe. If your screw collides with the metal plate, simply flip it around.

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
# pre-klackender position_endstop: 0
position_max: 245
homing_speed: 50
position_min: -5 #most Ender 3 configs have this wrong. Between the nozzle and the bed is a gap of 8mm (Y dimension) when the printer is homed. If not adapt this and the -8 in the Probe_In Makro (-5 for the Ender 3 Pro). 
position_endstop: -5 # OG Ender 3: -8, Ender 3 Pro: -5

[stepper_z]
step_pin: PB5
dir_pin: !PB6
# pre-klackender enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PA7
#position_endstop: 0.0
#endstop_pin: probe:z_virtual_endstop
# pre-klackender position_min: -4
#position_min: -100
position_max: 250
endstop_pin: probe:z_virtual_endstop #if you want to use the Prove as z-endstop (You can unsinstall the stock z endstop then. If not, remove the [homing_override])
#position_endstop: 0 #remove this or uncomment it with a #
position_min: -8 # set a negative value (minimum as the probe z_offset)

[extruder]
max_extrude_only_distance: 120.0
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
#rotation_distance: 33.500
rotation_distance: 33
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control = pid
pid_kp = 27.744
pid_ki = 1.331
pid_kd = 144.618
min_temp: 0
max_temp: 250
# .762 (1.5")
pressure_advance: 0.055

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 130
control = pid
pid_kp = 71.096
pid_ki = 1.544
pid_kd = 818.491

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 401.81
max_accel: 1785
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

#[bltouch]
#sensor_pin: ^PB1
#control_pin: PB0
#x_offset: -46
#y_offset: -5
#z_offset: 0
#probe_with_touch_mode: true

#[safe_z_home] 
#home_xy_position: 117.5,117.5
#z_hop: 10
#z_hop_speed: 5

#[bed_mesh]
#speed: 120
#horizontal_move_z: 5
#mesh_min: 15, 15
#mesh_max: 185, 220
#probe_count: 5,3
#algorithm: bicubic

#[screws_tilt_adjust]
#screw1: 74,47
#screw1_name: front left screw
#screw2: 245, 47
#screw2_name: front right screw
#screw3: 245, 217
#screw3_name: rear right screw
#screw4: 74,217
#screw4_name: rear left screw
#screw_thread: CW-M4

[input_shaper]
shaper_freq_x: 34.88
shaper_freq_y: 36.36
shaper_type: mzv

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=True
    {action_respond_info("Idle Timeout: Extruder powered down")}
    M104 S0   ; Set Hot-end to 0C (off)
  {% else %}
    {action_respond_info("Idle Timeout: Stepper and Heater powered down")}
    TURN_OFF_HEATERS
    M84
  {% endif %}``` it will actually timeout properly, unless paused in which case it will only turn off the extruder

[gcode_macro START_PRINT]
gcode:
    #{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    #{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set BED_TEMP = params.BED_TEMP|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|float %}
    # pre-heat extruder part way to reduce wait time but don't wait for it to heat and move to next command
    M118 - Preheating extruder to 170C and moving on
    M104 S170
    # Heat bed for probing, wait for this to heat up
    M118 - Heating bed
    M190 S{BED_TEMP}
    # Delay for 3 minutes to allow bed temp to set in
    M118 - Delaying for 3 minutes to let bed heat set in
    G4 P180000
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # Generate an adaptive bed mesh for this print
    M118 - Running adaptive calibration
    BED_MESH_CALIBRATE ADAPTIVE=1
    ## NOTE:    The adaptive meshing feature requires exclude_object     ##
    ##      and may require 'Label Objects' to be enabled in the slicer  ##
    ##           To mesh without it just use BED_MESH_CALIBRATE          ##
    # If you are loading an existing mesh:
    #BED_MESH_PROFILE LOAD=default
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Set and wait for nozzle to reach printing temperature
    M118 - Finish heating the nozzle
    M109 S{EXTRUDER_TEMP}
    # Start printing!

[gcode_macro PRINT_START]
gcode:
    START_PRINT {rawparams}

[exclude_object]

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M118 - Turning off bed, extruder and fans
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    M118 - Turning off steppers
    # Disable steppers
    M84

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE_BASE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro RES_TEST]
# used for resonance and speed testing using klippers documentation here: https://www.klipper3d.org/Resonance_Compensation.html
gcode:
    M118 ** RESONANCE TEST ***
    SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO=0
    SET_PRESSURE_ADVANCE ADVANCE=0
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
    TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1500 STEP_DELTA=500 STEP_HEIGHT=5

[gcode_macro ACCEL_TEST]
# used for resonance and speed testing using klippers documentation here: https://www.klipper3d.org/Resonance_Compensation.html
gcode:
    M118 ** ACCELERATION TEST **
    SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO=0
    SET_PRESSURE_ADVANCE ADVANCE=0
    TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1500 STEP_DELTA=500 STEP_HEIGHT=5

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}
    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION
    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}
    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}
    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}
    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}
    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION
    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.030000, 0.145000, 0.252500, 0.312500, 0.297500
#*# 	-0.102500, -0.015000, 0.130000, 0.217500, 0.172500
#*# 	-0.012500, 0.052500, 0.167500, 0.260000, 0.227500
#*# x_count = 5
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 185.0
#*# min_y = 15.0
#*# max_y = 220.0
#*#

#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.744
#*# pid_ki = 1.331
#*# pid_kd = 144.618
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.096
#*# pid_ki = 1.544
#*# pid_kd = 818.491
